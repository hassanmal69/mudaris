import * as React from 'react';
import { NodeId, RuntimeError, ComponentConfig, NodeHashes, SlotType } from '@mui/toolpad-core';
import { R as RuntimeState } from './types-e_iIjmol.mjs';
import '@mui/toolpad-core/appDom';

interface Rectangle {
    x: number;
    y: number;
    width: number;
    height: number;
}

declare global {
    interface Error {
        code?: unknown;
    }
}
type FlowDirection = 'row' | 'column' | 'row-reverse' | 'column-reverse';
interface SlotState {
    type: SlotType;
    rect: Rectangle;
    flowDirection: FlowDirection;
}
interface SlotsState {
    [prop: string]: SlotState | undefined;
}
interface NodeInfo {
    nodeId: NodeId;
    error?: RuntimeError | null;
    rect?: Rectangle;
    slots?: SlotsState;
    componentConfig?: ComponentConfig;
    props: {
        [key: string]: unknown;
    };
}
interface AppCanvasState extends RuntimeState {
    savedNodes: NodeHashes;
}

declare function updateNodeInfo(nodeInfo: NodeInfo, rootElm: Element): NodeInfo;
interface AppCanvasProps {
    state: AppCanvasState;
    basename: string;
}
declare function AppCanvas({ basename, state: initialState }: AppCanvasProps): React.JSX.Element | null;

export { type AppCanvasProps, AppCanvas as default, updateNodeInfo };
